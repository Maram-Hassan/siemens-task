pipeline {
    agent any

    stages {
        stage('Checkout Terraform Repository') {
            steps {
                // Checkout your repository
                git branch: 'main', url: 'https://github.com/Maram-Hassan/siemens-task.git'
            }
        }

        stage('Install Terraform') {
            steps {
                // Install Terraform if not already installed
                sh '''
                if ! [ -x "$(command -v terraform)" ]; then
                  wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
                  unzip terraform_1.5.0_linux_amd64.zip
                  sudo mv terraform /usr/local/bin/
                fi
                '''
            }
        }

        stage('Terraform Init') {
            steps {
                // Use AWS credentials for Terraform
                withAWS(credentials: 'aws-credentials') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                // Use AWS credentials to run Terraform plan
                withAWS(credentials: 'aws-credentials') {
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                // Use AWS credentials to run Terraform apply
                withAWS(credentials: 'aws-credentials') {
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Get EC2 Public IP') {
            steps {
                script {
                    // Capture the public IP of the EC2 instance from Terraform output
                    def ip = sh(script: 'terraform output -raw instance_public_ip', returnStdout: true).trim()

                    // Update the inventory file with the new EC2 IP for Ansible, no need for a key file reference
                    sh """
                    echo "[nexus_server]" > inventory.txt
                    echo "$ip ansible_user=ubuntu" >> inventory.txt
                    """
                }
            }
        }

        stage('Install Nexus') {
            steps {
                // Use the SSH key from Jenkins credentials to run the Ansible playbook
                withCredentials([sshUserPrivateKey(credentialsId: 'b7728db5-7ee2-4294-afe8-fcaa0aaf4a2c', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
                    sh '''
                    chmod 600 ${SSH_KEY}  # Fix permissions for SSH key

                    # Run the Ansible playbook using the inventory file and SSH credentials from Jenkins
                    ansible-playbook play-book.yml -i inventory.txt --private-key ${SSH_KEY} --user ${SSH_USER} --ssh-extra-args "-o StrictHostKeyChecking=no"
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after pipeline finishes
            cleanWs()
        }
    }
}
